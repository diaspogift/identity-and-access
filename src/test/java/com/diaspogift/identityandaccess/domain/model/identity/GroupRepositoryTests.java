package com.diaspogift.identityandaccess.domain.model.identity;import com.diaspogift.identityandaccess.domain.model.DomainRegistry;import com.diaspogift.identityandaccess.domain.model.IdentityAndAccessTest;import org.junit.Test;import org.junit.runner.RunWith;import org.springframework.boot.test.context.SpringBootTest;import org.springframework.dao.EmptyResultDataAccessException;import org.springframework.test.context.junit4.SpringRunner;import org.springframework.transaction.annotation.Transactional;import static org.junit.Assert.*;@RunWith(SpringRunner.class)@SpringBootTest@Transactionalpublic class GroupRepositoryTests extends IdentityAndAccessTest {    public GroupRepositoryTests() {        super();    }    @Test    public void remove() throws Exception {        Tenant tenant = this.actifTenantAggregate();        Group groupA = tenant.provisionGroup(FIXTURE_GROUP_NAME_1, FIXTURE_GROUP_DESCRIPTION_1);        DomainRegistry.groupRepository().add(groupA);        Group notNullGroup =                DomainRegistry                        .groupRepository()                        .groupNamed(tenant.tenantId(), FIXTURE_GROUP_NAME_1);        assertNotNull(notNullGroup);        DomainRegistry.groupRepository().remove(groupA);        Group removedGroup = null;        boolean emptyResultDataAccessExceptionTrigger = false;        try {            removedGroup = DomainRegistry                    .groupRepository()                    .groupNamed(tenant.tenantId(), FIXTURE_GROUP_NAME_1);            fail("Should not have got here.");        } catch (EmptyResultDataAccessException e) {            emptyResultDataAccessExceptionTrigger = true;        }        assertNull(removedGroup);        assertTrue(emptyResultDataAccessExceptionTrigger);    }}